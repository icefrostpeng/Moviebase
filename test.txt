    1 #! /usr/bin/env python
    2 #  -*- coding: utf-8 -*-
    3 #
    4 # GUI module generated by PAGE version 6.0.1
    5 #  in conjunction with Tcl version 8.6
    6 #    Mar 24, 2021 05:24:22 PM IST  platform: Windows NT
    7 
    8 import sys
    9 
   10 try:
   11     import Tkinter as tk
   12 except ImportError:
   13     import tkinter as tk
   14 
   15 try:
   16     import ttk
   17     py3 = False
   18 except ImportError:
   19     import tkinter.ttk as ttk
   20     py3 = True
   21 
   22 import Delshow_support
   23 
   24 def vp_start_gui():
   25     '''Starting point when module is the main routine.'''
   26     global val, w, root
   27     root = tk.Tk()
   28     top = Search (root)
   29     Delshow_support.init(root, top)
   30     root.mainloop()
   31 
   32 w = None
   33 def create_Search(rt, *args, **kwargs):
   34     '''Starting point when module is imported by another module.
   35        Correct form of call: 'create_Search(root, *args, **kwargs)' .'''
   36     global w, w_win, root
   37     #rt = root
   38     root = rt
   39     w = tk.Toplevel (root)
   40     top = Search (w)
   41     Delshow_support.init(w, top, *args, **kwargs)
   42     return (w, top)
   43 
   44 def destroy_Search():
   45     global w
   46     w.destroy()
   47     w = None
   48 
   49 class Search:
   50     def __init__(self, top=None):
   51         '''This class configures and populates the toplevel window.
   52            top is the toplevel containing window.'''
   53         _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
   54         _fgcolor = '#000000'  # X11 color: 'black'
   55         _compcolor = '#d9d9d9' # X11 color: 'gray85'
   56         _ana1color = '#d9d9d9' # X11 color: 'gray85'
   57         _ana2color = '#ececec' # Closest X11 color: 'gray92'
   58         self.style = ttk.Style()
   59         if sys.platform == "win32":
   60             self.style.theme_use('winnative')
   61         self.style.configure('.',background=_bgcolor)
   62         self.style.configure('.',foreground=_fgcolor)
   63         self.style.configure('.',font="TkDefaultFont")
   64         self.style.map('.',background=
   65             [('selected', _compcolor), ('active',_ana2color)])
   66 
   67         top.geometry("1280x686+212+135")
   68         top.minsize(120, 1)
   69         top.maxsize(3004, 1913)
   70         top.resizable(1,  1)
   71         top.title("New Toplevel")
   72         top.configure(background="#000040")
   73         top.configure(highlightbackground="#d9d9d9")
   74         top.configure(highlightcolor="#000000")
   75 
   76         self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
   77         top.configure(menu = self.menubar)
   78 
   79         self.TSeparator3 = ttk.Separator(top)
   80         self.TSeparator3.place(relx=0.165, rely=0.168,  relheight=0.845)
   81         self.TSeparator3.configure(orient="vertical")
   82 
   83         self.TSeparator4 = ttk.Separator(top)
   84         self.TSeparator4.place(relx=0.818, rely=0.168,  relheight=0.835)
   85         self.TSeparator4.configure(orient="vertical")
   86 
   87         self.Movie1 = tk.Frame(top)
   88         self.Movie1.place(relx=0.18, rely=0.364, relheight=0.137, relwidth=0.621)
   89 
   90         self.Movie1.configure(relief='groove')
   91         self.Movie1.configure(borderwidth="2")
   92         self.Movie1.configure(relief="groove")
   93         self.Movie1.configure(background="#00002b")
   94         self.Movie1.configure(highlightbackground="#d9d9d9")
   95         self.Movie1.configure(highlightcolor="black")
   96 
   97         self.Description1 = tk.Label(self.Movie1)
   98         self.Description1.place(relx=0.025, rely=0.106, height=32, width=764)
   99         self.Description1.configure(activebackground="#f9f9f9")
  100         self.Description1.configure(activeforeground="black")
  101         self.Description1.configure(anchor='nw')
  102         self.Description1.configure(background="#00002b")
  103         self.Description1.configure(disabledforeground="#a3a3a3")
  104         self.Description1.configure(font="-family {Segoe UI} -size 12")
  105         self.Description1.configure(foreground="#bcfbfe")
  106         self.Description1.configure(highlightbackground="#d9d9d9")
  107         self.Description1.configure(highlightcolor="black")
  108         self.Description1.configure(text='''Name of cinema with address''')
  109 
  110         self.Label3 = tk.Label(self.Movie1)
  111         self.Label3.place(relx=0.038, rely=0.638, height=21, width=54)
  112         self.Label3.configure(activebackground="#f9f9f9")
  113         self.Label3.configure(activeforeground="black")
  114         self.Label3.configure(background="#d9d9d9")
  115         self.Label3.configure(disabledforeground="#a3a3a3")
  116         self.Label3.configure(foreground="#000000")
  117         self.Label3.configure(highlightbackground="#d9d9d9")
  118         self.Label3.configure(highlightcolor="black")
  119         self.Label3.configure(text='''timings''')
  120 
  121         self.Label4 = tk.Label(self.Movie1)
  122         self.Label4.place(relx=0.138, rely=0.638, height=21, width=55)
  123         self.Label4.configure(activebackground="#f9f9f9")
  124         self.Label4.configure(activeforeground="black")
  125         self.Label4.configure(background="#d9d9d9")
  126         self.Label4.configure(disabledforeground="#a3a3a3")
  127         self.Label4.configure(foreground="#000000")
  128         self.Label4.configure(highlightbackground="#d9d9d9")
  129         self.Label4.configure(highlightcolor="black")
  130         self.Label4.configure(text='''timings''')
  131 
  132 if __name__ == '__main__':
  133     vp_start_gui()
  134 
  135 

