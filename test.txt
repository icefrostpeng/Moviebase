    1 #! /usr/bin/env python
    2 #  -*- coding: utf-8 -*-
    3 #
    4 # GUI module generated by PAGE version 6.0.1
    5 #  in conjunction with Tcl version 8.6
    6 #    Mar 24, 2021 11:04:04 AM IST  platform: Windows NT
    7 
    8 import sys
    9 
   10 try:
   11     import Tkinter as tk
   12 except ImportError:
   13     import tkinter as tk
   14 
   15 try:
   16     import ttk
   17     py3 = False
   18 except ImportError:
   19     import tkinter.ttk as ttk
   20     py3 = True
   21 
   22 import ifAdult_support
   23 
   24 def vp_start_gui():
   25     '''Starting point when module is the main routine.'''
   26     global val, w, root
   27     root = tk.Tk()
   28     ifAdult_support.set_Tk_var()
   29     top = Search (root)
   30     ifAdult_support.init(root, top)
   31     root.mainloop()
   32 
   33 w = None
   34 def create_Search(rt, *args, **kwargs):
   35     '''Starting point when module is imported by another module.
   36        Correct form of call: 'create_Search(root, *args, **kwargs)' .'''
   37     global w, w_win, root
   38     #rt = root
   39     root = rt
   40     w = tk.Toplevel (root)
   41     ifAdult_support.set_Tk_var()
   42     top = Search (w)
   43     ifAdult_support.init(w, top, *args, **kwargs)
   44     return (w, top)
   45 
   46 def destroy_Search():
   47     global w
   48     w.destroy()
   49     w = None
   50 
   51 class Search:
   52     def __init__(self, top=None):
   53         '''This class configures and populates the toplevel window.
   54            top is the toplevel containing window.'''
   55         _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
   56         _fgcolor = '#000000'  # X11 color: 'black'
   57         _compcolor = '#d9d9d9' # X11 color: 'gray85'
   58         _ana1color = '#d9d9d9' # X11 color: 'gray85'
   59         _ana2color = '#ececec' # Closest X11 color: 'gray92'
   60         self.style = ttk.Style()
   61         if sys.platform == "win32":
   62             self.style.theme_use('winnative')
   63         self.style.configure('.',background=_bgcolor)
   64         self.style.configure('.',foreground=_fgcolor)
   65         self.style.configure('.',font="TkDefaultFont")
   66         self.style.map('.',background=
   67             [('selected', _compcolor), ('active',_ana2color)])
   68 
   69         top.geometry("1280x686+212+135")
   70         top.minsize(120, 1)
   71         top.maxsize(3004, 1913)
   72         top.resizable(1,  1)
   73         top.title("New Toplevel")
   74         top.configure(background="#000040")
   75         top.configure(highlightbackground="#d9d9d9")
   76         top.configure(highlightcolor="#000000")
   77 
   78         self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
   79         top.configure(menu = self.menubar)
   80 
   81         self.TSeparator3 = ttk.Separator(top)
   82         self.TSeparator3.place(relx=0.165, rely=0.168,  relheight=0.845)
   83         self.TSeparator3.configure(orient="vertical")
   84 
   85         self.TSeparator4 = ttk.Separator(top)
   86         self.TSeparator4.place(relx=0.818, rely=0.168,  relheight=0.835)
   87         self.TSeparator4.configure(orient="vertical")
   88 
   89         self.Movie1 = tk.Frame(top)
   90         self.Movie1.place(relx=0.18, rely=0.233, relheight=0.62, relwidth=0.621)
   91         self.Movie1.configure(relief='groove')
   92         self.Movie1.configure(borderwidth="2")
   93         self.Movie1.configure(relief="groove")
   94         self.Movie1.configure(background="#00002b")
   95         self.Movie1.configure(cursor="fleur")
   96         self.Movie1.configure(highlightbackground="#d9d9d9")
   97         self.Movie1.configure(highlightcolor="black")
   98 
   99         self.Description1 = tk.Label(self.Movie1)
  100         self.Description1.place(relx=0.126, rely=0.141, height=142, width=674)
  101         self.Description1.configure(activebackground="#f9f9f9")
  102         self.Description1.configure(activeforeground="black")
  103         self.Description1.configure(anchor='nw')
  104         self.Description1.configure(background="#00002b")
  105         self.Description1.configure(disabledforeground="#a3a3a3")
  106         self.Description1.configure(font="-family {Segoe UI} -size 17")
  107         self.Description1.configure(foreground="#bcfbfe")
  108         self.Description1.configure(highlightbackground="#d9d9d9")
  109         self.Description1.configure(highlightcolor="black")
  110         self.Description1.configure(text='''Warning: The movie you are trying to book is for Adults only. Please make sure that the people along with you are Adults aswell''')
  111         self.Description1.configure(wraplength="600")
  112 
  113         self.Label2 = tk.Label(self.Movie1)
  114         self.Label2.place(relx=0.126, rely=0.424, height=121, width=593)
  115         self.Label2.configure(background="#00002b")
  116         self.Label2.configure(disabledforeground="#a3a3a3")
  117         self.Label2.configure(font="-family {Segoe UI} -size 17")
  118         self.Label2.configure(foreground="#ffffff")
  119         self.Label2.configure(text='''Else You may not be allowed entry and may result is cancellation of ticket at the Cinema. Theatre Buzz will not be held resposible in any way for cancellation of such tickets.''')
  120         self.Label2.configure(wraplength="600")
  121 
  122         self.Checkbutton1 = tk.Checkbutton(self.Movie1)
  123         self.Checkbutton1.place(relx=0.05, rely=0.824, relheight=0.106
  124                 , relwidth=0.366)
  125         self.Checkbutton1.configure(activebackground="#ececec")
  126         self.Checkbutton1.configure(activeforeground="#000000")
  127         self.Checkbutton1.configure(background="#00002b")
  128         self.Checkbutton1.configure(disabledforeground="#a3a3a3")
  129         self.Checkbutton1.configure(font="-family {Segoe UI} -size 13")
  130         self.Checkbutton1.configure(foreground="#ffffff")
  131         self.Checkbutton1.configure(highlightbackground="#d9d9d9")
  132         self.Checkbutton1.configure(highlightcolor="black")
  133         self.Checkbutton1.configure(justify='left')
  134         self.Checkbutton1.configure(text='''I agree that we all are Adults''')
  135         self.Checkbutton1.configure(variable=ifAdult_support.che58)
  136 
  137         self.Button1 = tk.Button(self.Movie1)
  138         self.Button1.place(relx=0.616, rely=0.847, height=44, width=227)
  139         self.Button1.configure(activebackground="#ececec")
  140         self.Button1.configure(activeforeground="#000000")
  141         self.Button1.configure(background="#b4eafe")
  142         self.Button1.configure(disabledforeground="#a3a3a3")
  143         self.Button1.configure(font="-family {Segoe UI} -size 14")
  144         self.Button1.configure(foreground="#000000")
  145         self.Button1.configure(highlightbackground="#d9d9d9")
  146         self.Button1.configure(highlightcolor="black")
  147         self.Button1.configure(pady="0")
  148         self.Button1.configure(text='''Continue''')
  149 
  150 if __name__ == '__main__':
  151     vp_start_gui()
  152 
  153 

