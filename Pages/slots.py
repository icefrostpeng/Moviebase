#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0.1
#  in conjunction with Tcl version 8.6
#    Mar 24, 2021 09:14:49 AM IST  platform: Windows NT

import sys
import seats
from functools import partial
#from searchbar import Searchbar
import payment
import nhome
global dic,mod,co,wil
from datetime import date
try:
	import Tkinter as tk
except ImportError:
	import tkinter as tk
from tkinter import *

try:
	import ttk
	py3 = False
except ImportError:
	import tkinter.ttk as ttk
	py3 = True
def back(name,mem,email,top):
	top.destroy()
	nhome.vp_start_gui1(name,mem,email)
def button_functionality(mem):
	if mem == 'Gold':
		gold = False
		platinum = True
		diamond = True
	elif mem == 'Platinum':
		gold = False
		platinum = False
		diamond = True
	elif mem == 'Diamond':
		gold = False
		platinum = False
		diamond = False
	else:
		gold = True
		platinum = True
		diamond = True
	return gold, platinum, diamond
def vp_start_slot(l,m,name,mem,email,top,names,ratings):
	'''Starting point when module is the main routine.'''
	global val, w, root
	root = tk.Tk()
	top = Slots (l,m,name,mem,email,root,names,ratings)
	root.mainloop()

w = None
def create_Slots(rt, *args, **kwargs):
	'''Starting point when module is imported by another module.
	   Correct form of call: 'create_Slots(root, *args, **kwargs)' .'''
	global w, w_win, root
	#rt = root
	root = rt
	w = tk.Toplevel (root)
	top = Slots (w)
	return (w, top)

def destroy_Slots():
	global w
	w.destroy()
	w = None
def slotb(l,i,slotid,name,mem,email,cost,datess,top):
	top.destroy()
	print("check :")
	print(l)
	
	seats.creates(l,i,slotid,name,mem,email,cost,datess)
def dele(m):
	today=date.today()
	mi={}
	for i in m:
		da=i.split('-')
		dat=date(int(da[0]),int(da[1]),int(da[2]))
		if(dat>=today):
			mi[i]=m[i]
	return mi
class Slots():
	def ahead(self,l,name,mem,email,top):
		
		global co,dic,mod,wil
		print("yes")
		co=(co+1)%mod
		ky=[]
		for i in dic:
			ky.append(i)
		lst=dic[ky[co]]
		da=ky[co].split("-")
		das=da[2]+"/"+da[1]
		print(das)
		self.strd.set(das)
		dy=0.1
		ty=0.364
		for i in wil:
			i.destroy()
		wil=[]
		for i in lst:
			print(i)
			self.Movie1 = tk.Frame(top)
			self.Movie1.place(relx=0.18, rely=ty, relheight=0.137, relwidth=0.621)
			self.Movie1.configure(relief='groove')
			self.Movie1.configure(borderwidth="2")
			self.Movie1.configure(relief="groove")
			self.Movie1.configure(background="#00002b")
			self.Movie1.configure(highlightbackground="#d9d9d9")
			self.Movie1.configure(highlightcolor="black")
			wil.append(self.Movie1)
			self.Description1 = tk.Label(self.Movie1,wraplength=300, justify="left")
			self.Description1.place(relx=0.025, rely=dy, height=160, width=490)
			self.Description1.configure(activebackground="#f9f9f9")
			self.Description1.configure(activeforeground="black")
			self.Description1.configure(anchor='nw')
			self.Description1.configure(background="#00002b")
			self.Description1.configure(cursor="fleur")
			self.Description1.configure(disabledforeground="#a3a3a3")
			self.Description1.configure(font="-family {Segoe UI} -size 13")
			self.Description1.configure(foreground="#bcfbfe")
			self.Description1.configure(highlightbackground="#d9d9d9")
			self.Description1.configure(highlightcolor="black")
			ste="Cinema Hall : "+i[1]+"\t\tCost :"+str(i[6])+"\nAddress "+i[2]+","+i[3]+":\nTiming: "+i[5]
			self.Description1.configure(text=ste)
			wil.append(self.Description1)
			
			self.Book_b = tk.Button(top,command=partial(slotb,l,i,i[4],name,mem,email,i[6],das,top))
			self.Book_b.place(relx=0.60, rely=ty+0.02, height=54, width=177)
			self.Book_b.configure(activebackground="#000040")
			self.Book_b.configure(activeforeground="white")
			self.Book_b.configure(activeforeground="#ffffff")
			self.Book_b.configure(background="#b3eaff")
			self.Book_b.configure(disabledforeground="#a3a3a3")
			self.Book_b.configure(cursor="hand2")
			self.Book_b.configure(font="-family {Segoe UI} -size 14")
			self.Book_b.configure(foreground="#000000")
			self.Book_b.configure(highlightbackground="#d9d9d9")
			self.Book_b.configure(highlightcolor="black")
			self.Book_b.configure(pady="0")
			self.Book_b.configure(text='''Book Ticket!''')
			wil.append(self.Book_b)
			ty+=0.14
	def backw(self,l,name,mem,email,top):
		global co,dic,mod,wil
		if(co!=0):
			co-=1
		
		ky=[]
		for i in dic:
			ky.append(i)
		lst=dic[ky[co]]
		da=ky[co].split("-")
		das=da[2]+"/"+da[1]
		print(das)
		self.strd.set(das)
		dy=0.1
		ty=0.364
		for i in wil:
			i.destroy()
		wil=[]
		for i in lst:
			print(i)
			self.Movie1 = tk.Frame(top)
			self.Movie1.place(relx=0.18, rely=ty, relheight=0.137, relwidth=0.621)
			self.Movie1.configure(relief='groove')
			self.Movie1.configure(borderwidth="2")
			self.Movie1.configure(relief="groove")
			self.Movie1.configure(background="#00002b")
			self.Movie1.configure(highlightbackground="#d9d9d9")
			self.Movie1.configure(highlightcolor="black")
			wil.append(self.Movie1)
			self.Description1 = tk.Label(self.Movie1,wraplength=300, justify="left")
			self.Description1.place(relx=0.025, rely=dy, height=160, width=490)
			self.Description1.configure(activebackground="#f9f9f9")
			self.Description1.configure(activeforeground="black")
			self.Description1.configure(anchor='nw')
			self.Description1.configure(background="#00002b")
			self.Description1.configure(cursor="fleur")
			self.Description1.configure(disabledforeground="#a3a3a3")
			self.Description1.configure(font="-family {Segoe UI} -size 13")
			self.Description1.configure(foreground="#bcfbfe")
			self.Description1.configure(highlightbackground="#d9d9d9")
			self.Description1.configure(highlightcolor="black")
			ste="Cinema Hall : "+i[1]+"\t\tCost :"+str(i[6])+"\nAddress "+i[2]+","+i[3]+":\nTiming: "+i[5]
			self.Description1.configure(text=ste)
			wil.append(self.Description1)
			
			self.Book_b = tk.Button(top,command=partial(slotb,l,i,i[4],name,mem,email,i[6],das,top))
			self.Book_b.place(relx=0.60, rely=ty+0.02, height=54, width=177)
			self.Book_b.configure(activebackground="#000040")
			self.Book_b.configure(activeforeground="white")
			self.Book_b.configure(activeforeground="#ffffff")
			self.Book_b.configure(background="#b3eaff")
			self.Book_b.configure(disabledforeground="#a3a3a3")
			self.Book_b.configure(cursor="hand2")
			self.Book_b.configure(font="-family {Segoe UI} -size 14")
			self.Book_b.configure(foreground="#000000")
			self.Book_b.configure(highlightbackground="#d9d9d9")
			self.Book_b.configure(highlightcolor="black")
			self.Book_b.configure(pady="0")
			self.Book_b.configure(text='''Book Ticket!''')
			wil.append(self.Book_b)
			ty+=0.14
	def __init__(self, l,m,name,mem,email,top,names,ratings):
		global dic,mod,co,wil
		co=0
		m=dele(m)
		dic=m
		print("here")
		print(m)
		mod=len(m)
		'''This class configures and populates the toplevel window.
		   top is the toplevel containing window.'''
		_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
		_fgcolor = '#000000'  # X11 color: 'black'
		_compcolor = '#d9d9d9' # X11 color: 'gray85'
		_ana1color = '#d9d9d9' # X11 color: 'gray85'
		_ana2color = '#ececec' # Closest X11 color: 'gray92'
		self.style = ttk.Style()
		if sys.platform == "win32":
		    self.style.theme_use('winnative')
		self.style.configure('.',background=_bgcolor)
		self.style.configure('.',foreground=_fgcolor)
		self.style.configure('.',font="TkDefaultFont")
		self.style.map('.',background=
		    [('selected', _compcolor), ('active',_ana2color)])

		top.geometry("1280x686+212+135")
		top.minsize(120, 1)
		top.maxsize(3004, 1913)
		top.resizable(1,  1)
		top.title("New Toplevel")
		top.configure(background="#000040")
		top.configure(highlightbackground="#d9d9d9")
		top.configure(highlightcolor="#000000")

		self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
		top.configure(menu = self.menubar)

		self.Recommended_l = tk.Label(top)
		self.Recommended_l.place(relx=0.178, rely=0.131, height=48, width=240)
		self.Recommended_l.configure(activebackground="#f9f9f9")
		self.Recommended_l.configure(activeforeground="black")
		self.Recommended_l.configure(background="#000040")
		self.Recommended_l.configure(borderwidth="5")
		self.Recommended_l.configure(disabledforeground="#a3a3a3")
		self.Recommended_l.configure(font="-family {Segoe UI} -size 22")
		self.Recommended_l.configure(foreground="#ffffff")
		self.Recommended_l.configure(highlightbackground="#d9d9d9")
		self.Recommended_l.configure(highlightcolor="black")
		self.Recommended_l.configure(text="Movie : "+l[1])

		self.TSeparator3 = ttk.Separator(top)
		self.TSeparator3.place(relx=0.165, rely=0.168,  relheight=0.845)
		self.TSeparator3.configure(orient="vertical")

		self.TSeparator4 = ttk.Separator(top)
		self.TSeparator4.place(relx=0.818, rely=0.168,  relheight=0.835)
		self.TSeparator4.configure(orient="vertical")

		

		self.Previous = tk.Button(top)
		self.Previous.place(relx=0.383, rely=0.933, height=24, width=47)
		self.Previous.configure(activebackground="#ececec")
		self.Previous.configure(activeforeground="#000000")
		self.Previous.configure(background="#b4eafe")
		self.Previous.configure(disabledforeground="#a3a3a3")
		self.Previous.configure(font="-family {Segoe UI} -size 15")
		self.Previous.configure(foreground="#000000")
		self.Previous.configure(highlightbackground="#d9d9d9")
		self.Previous.configure(highlightcolor="black")
		self.Previous.configure(pady="0")
		self.Previous.configure(text='''<''')

		self.Next = tk.Button(top)
		self.Next.place(relx=0.57, rely=0.933, height=24, width=47)
		self.Next.configure(activebackground="#ececec")
		self.Next.configure(activeforeground="#000000")
		self.Next.configure(background="#b4eafe")
		self.Next.configure(disabledforeground="#a3a3a3")
		self.Next.configure(font="-family {Segoe UI} -size 15")
		self.Next.configure(foreground="#000000")
		self.Next.configure(highlightbackground="#d9d9d9")
		self.Next.configure(highlightcolor="black")
		self.Next.configure(pady="0")
		self.Next.configure(text='''>''')

		self.Page_list = tk.Label(top)
		self.Page_list.place(relx=0.43, rely=0.933, height=21, width=164)
		self.Page_list.configure(activebackground="#f0f0f0f0f0f0")
		self.Page_list.configure(activeforeground="black")
		self.Page_list.configure(background="#000040")
		self.Page_list.configure(disabledforeground="#a3a3a3")
		self.Page_list.configure(font="-family {Segoe UI} -size 12")
		self.Page_list.configure(foreground="#b4eafe")
		self.Page_list.configure(highlightbackground="#d9d9d9")
		self.Page_list.configure(highlightcolor="black")
		self.Page_list.configure(text='''1 of 4''')
		today=date.today()
		g=[]
		for i in m:
			da=i.split('-')
			dat=date(int(da[0]),int(da[1]),int(da[2]))
			if(dat==today):
				g=m[i]
				das=da[2]+"/"+da[1]
				break
		if(len(g)==0):
			key=next(iter(m))
			print(key)
			da=key.split('-')
			dat=date(int(da[0]),int(da[1]),int(da[2]))
			
			g=m[key]
			das=da[2]+"/"+da[1]
		print(g)
		#st=today.strftime("%d")+"/"+today.strftime("%m")
		self.Label2 = tk.Label(top)
		self.Label2.place(relx=0.461, rely=0.248, height=51, width=74)
		self.Label2.configure(background="#000040")
		self.Label2.configure(disabledforeground="#a3a3a3")
		self.Label2.configure(font="-family {Segoe UI} -size 16")
		self.Label2.configure(foreground="#bbfcff")
		self.strd=StringVar()
		self.strd.set(das)
		self.Label2.configure(textvariable=self.strd)

		self.Button1 = tk.Button(top,command=lambda: self.backw(l,name,mem,email,top))
		self.Button1.place(relx=0.391, rely=0.262, height=44, width=47)
		self.Button1.configure(activebackground="#ececec")
		self.Button1.configure(activeforeground="#000000")
		self.Button1.configure(background="#5bedf9")
		self.Button1.configure(disabledforeground="#a3a3a3")
		self.Button1.configure(font="-family {Segoe UI} -size 18")
		self.Button1.configure(foreground="#000000")
		self.Button1.configure(highlightbackground="#d9d9d9")
		self.Button1.configure(highlightcolor="black")
		self.Button1.configure(pady="0")
		self.Button1.configure(text='''<''')

		self.Button2 = tk.Button(top,command=lambda: self.ahead(l,name,mem,email,top))
		self.Button2.place(relx=0.555, rely=0.262, height=44, width=47)
		self.Button2.configure(activebackground="#ececec")
		self.Button2.configure(activeforeground="#000000")
		self.Button2.configure(background="#5bedf9")
		self.Button2.configure(disabledforeground="#a3a3a3")
		self.Button2.configure(font="-family {Segoe UI} -size 18")
		self.Button2.configure(foreground="#000000")
		self.Button2.configure(highlightbackground="#d9d9d9")
		self.Button2.configure(highlightcolor="black")
		self.Button2.configure(pady="0")
		self.Button2.configure(text='''>''')
		dy=0.1
		ty=0.364
		wil=[]
		for i in g:
			print(i)
			self.Movie1 = tk.Frame(top)
			self.Movie1.place(relx=0.18, rely=ty, relheight=0.137, relwidth=0.621)
			self.Movie1.configure(relief='groove')
			self.Movie1.configure(borderwidth="2")
			self.Movie1.configure(relief="groove")
			self.Movie1.configure(background="#00002b")
			self.Movie1.configure(highlightbackground="#d9d9d9")
			self.Movie1.configure(highlightcolor="black")
			wil.append(self.Movie1)
			self.Description1 = tk.Label(self.Movie1,wraplength=300, justify="left")
			self.Description1.place(relx=0.025, rely=dy, height=160, width=490)
			self.Description1.configure(activebackground="#f9f9f9")
			self.Description1.configure(activeforeground="black")
			self.Description1.configure(anchor='nw')
			self.Description1.configure(background="#00002b")
			self.Description1.configure(cursor="fleur")
			self.Description1.configure(disabledforeground="#a3a3a3")
			self.Description1.configure(font="-family {Segoe UI} -size 13")
			self.Description1.configure(foreground="#bcfbfe")
			self.Description1.configure(highlightbackground="#d9d9d9")
			self.Description1.configure(highlightcolor="black")
			ste="Cinema Hall : "+i[1]+"\t\tCost :"+str(i[6])+"\nAddress "+i[2]+","+i[3]+":\nTiming: "+i[5]
			self.Description1.configure(text=ste)
			wil.append(self.Description1)
			
			
			self.Book_b = tk.Button(top,command=partial(slotb,l,i,i[4],name,mem,email,i[6],das,top))
			self.Book_b.place(relx=0.60, rely=ty+0.02, height=54, width=177)
			self.Book_b.configure(activebackground="#000040")
			self.Book_b.configure(activeforeground="white")
			self.Book_b.configure(activeforeground="#ffffff")
			self.Book_b.configure(background="#b3eaff")
			self.Book_b.configure(disabledforeground="#a3a3a3")
			self.Book_b.configure(cursor="hand2")
			self.Book_b.configure(font="-family {Segoe UI} -size 14")
			self.Book_b.configure(foreground="#000000")
			self.Book_b.configure(highlightbackground="#d9d9d9")
			self.Book_b.configure(highlightcolor="black")
			self.Book_b.configure(pady="0")
			self.Book_b.configure(text='''Book Ticket!''')
			wil.append(self.Book_b)
			ty+=0.14
		
		
		self.Fast_l = tk.Label(top)
		self.Fast_l.place(relx=0.18, rely=0.262, height=31, width=64)
		self.Fast_l.configure(activebackground="#f0f0f0f0f0f0")
		self.Fast_l.configure(background="#ffff80")
		self.Fast_l.configure(disabledforeground="#a3a3a3")
		self.Fast_l.configure(foreground="#000000")
		self.Fast_l.configure(text='''Fast Filling''')

		self.Sold_l = tk.Label(top)
		self.Sold_l.place(relx=0.242, rely=0.262, height=31, width=64)
		self.Sold_l.configure(activebackground="#f0f0f0f0f0f0")
		self.Sold_l.configure(background="#b90000")
		self.Sold_l.configure(disabledforeground="#a3a3a3")
		self.Sold_l.configure(foreground="#000000")
		self.Sold_l.configure(text='''Sold Out''')

		self.Available_f = tk.Label(top)
		self.Available_f.place(relx=0.305, rely=0.262, height=31, width=67)
		self.Available_f.configure(background="#00d200")
		self.Available_f.configure(disabledforeground="#a3a3a3")
		self.Available_f.configure(foreground="#000000")
		self.Available_f.configure(text='''Available''')
		
####################Membership Function##################################################
		self.membership = mem
		self.Membership_f = tk.LabelFrame(top)
		self.Membership_f.place(relx=0.013, rely=0.219, relheight=0.516, relwidth=0.14)
		self.Membership_f.configure(relief='groove')
		self.Membership_f.configure(foreground="#edea67")
		self.Membership_f.configure(background="#bfe2ff")
		self.Membership_f.configure(highlightbackground="#f3fee2")
		self.Membership_f.configure(highlightcolor="#4bc602")

		self.TSeparator3 = ttk.Separator(top)
		self.TSeparator3.place(relx=0.165, rely=0.168, relheight=0.845)
		self.TSeparator3.configure(orient="vertical")

		# redirect to payment
		def button_click(product):
		    top.destroy()
		    action = 1
		    payment.vp_start_gui_P(name, mem, product, email, action)


		# membership status
		gold, platinum, diamond = button_functionality(mem)

		# Gold Button
		prod_gold = ["Gold", 600]
		self.Gold_b = tk.Button(self.Membership_f, command=lambda: button_click(prod_gold))
		self.Gold_b.place(relx=0.056, rely=0.734, height=84, width=157, bordermode='ignore')
		self.Gold_b.configure(activebackground="#f0df99")
		self.Gold_b.configure(activeforeground="#000000")
		self.Gold_b.configure(background="#ffda04")
		self.Gold_b.configure(borderwidth="9")
		self.Gold_b.configure(disabledforeground="#a3a3a3")
		self.Gold_b.configure(font="-family {Segoe UI} -size 15")
		self.Gold_b.configure(foreground="#000000")
		self.Gold_b.configure(highlightbackground="#d9d9d9")
		self.Gold_b.configure(highlightcolor="black")
		self.Gold_b.configure(pady="0")
		self.Gold_b.configure(text='Gold')
		if gold:
		    self.Gold_b["state"] = "normal"
		else:
		    self.Gold_b["state"] = "disabled"

		# Platinum Button
		prod_platinum = ["Platinum", 800]
		self.Platinum_b = tk.Button(self.Membership_f, command=lambda: button_click(prod_platinum))
		self.Platinum_b.place(relx=0.056, rely=0.452, height=84, width=157, bordermode='ignore')
		self.Platinum_b.configure(activebackground="#707070")
		self.Platinum_b.configure(activeforeground="white")
		self.Platinum_b.configure(activeforeground="#000000")
		self.Platinum_b.configure(background="#d8d8d8")
		self.Platinum_b.configure(borderwidth="9")
		self.Platinum_b.configure(disabledforeground="#a3a3a3")
		self.Platinum_b.configure(font="-family {Segoe UI} -size 15")
		self.Platinum_b.configure(foreground="#000000")
		self.Platinum_b.configure(highlightbackground="#d9d9d9")
		self.Platinum_b.configure(highlightcolor="black")
		self.Platinum_b.configure(pady="0")
		self.Platinum_b.configure(text='''Platinum''')
		if platinum:
		    self.Platinum_b["state"] = "normal"
		else:
		    self.Platinum_b["state"] = "disabled"

		# Diamond Button
		prod_diamond = ["Diamond", 1000]
		self.Diamond_b = tk.Button(self.Membership_f, command=lambda: button_click(prod_diamond))
		self.Diamond_b.place(relx=0.061, rely=0.169, height=84, width=157, bordermode='ignore')
		self.Diamond_b.configure(activebackground="#d9fcff")
		self.Diamond_b.configure(activeforeground="#7070fa")
		self.Diamond_b.configure(background="#2de9f2")
		self.Diamond_b.configure(borderwidth="9")
		self.Diamond_b.configure(disabledforeground="#a3a3a3")
		self.Diamond_b.configure(font="-family {Segoe UI} -size 15")
		self.Diamond_b.configure(foreground="#000000")
		self.Diamond_b.configure(highlightbackground="#d9d9d9")
		self.Diamond_b.configure(highlightcolor="#e9f552")
		self.Diamond_b.configure(highlightthickness="6")
		self.Diamond_b.configure(pady="0")
		self.Diamond_b.configure(text='''Diamond''')
		if diamond:
		    self.Diamond_b["state"] = "normal"
		else:
		    self.Diamond_b["state"] = "disabled"

		# Label in membership block
		self.Join_l = tk.Label(self.Membership_f)
		self.Join_l.place(relx=0.056, rely=0.028, height=41, width=155, bordermode='ignore')
		self.Join_l.configure(activebackground="#f9f9f9")
		self.Join_l.configure(activeforeground="black")
		self.Join_l.configure(background="#bfe2ff")
		self.Join_l.configure(disabledforeground="#a3a3a3")
		self.Join_l.configure(font="-family {Segoe UI} -size 12")
		self.Join_l.configure(foreground="#000000")
		self.Join_l.configure(highlightbackground="#d9d9d9")
		self.Join_l.configure(highlightcolor="black")
		self.Join_l.configure(text=f'Join our Membership plan!')
		self.Join_l.configure(wraplength="150")
##########################################################################################################################################
####################Sidebar########################################################################
		self.TSeparator4 = ttk.Separator(top)
		self.TSeparator4.place(relx=0.818, rely=0.168,  relheight=0.835)
		self.TSeparator4.configure(orient="vertical")


		self.Listofmovies_f = tk.LabelFrame(top)
		self.Listofmovies_f.place(relx=0.829, rely=0.157, relheight=0.831
		        , relwidth=0.138)
		self.Listofmovies_f.configure(relief='groove')
		self.Listofmovies_f.configure(font="-family {Segoe UI} -size 17")
		self.Listofmovies_f.configure(foreground="#000000")
		self.Listofmovies_f.configure(text='''List of Movies''')
		self.Listofmovies_f.configure(background="#d7eeff")
		self.Listofmovies_f.configure(highlightbackground="#f0f0f0f0f0f0")
		self.Listofmovies_f.configure(highlightcolor="#646464646464")

		self.page_id = tk.Label(self.Listofmovies_f)
		self.page_id.place(relx=0.04, rely=0.947, height=21, width=166
		        , bordermode='ignore')
		self.page_id.configure(activebackground="#f9f9f9")
		self.page_id.configure(activeforeground="black")
		self.page_id.configure(background="#000040")
		self.page_id.configure(borderwidth="10")
		self.page_id.configure(disabledforeground="#a3a3a3")
		self.page_id.configure(font="-family {Segoe UI} -size 13")
		self.page_id.configure(foreground="#ffffff")
		self.page_id.configure(highlightbackground="#d9d9d9")
		self.page_id.configure(highlightcolor="black")
		self.page_id.configure(text='''1 of 2''')

		namem, rating = names,ratings
		y=0.07
		for i in range(0,len(namem)):
		                self.Movie1_b = tk.Button(self.Listofmovies_f)
		                self.Movie1_b.place(relx=0.056, rely=y, height=74, width=157, bordermode='ignore')
		                self.Movie1_b.configure(activebackground="#ececec")
		                self.Movie1_b.configure(activeforeground="#000000")
		                self.Movie1_b.configure(anchor='nw')
		                self.Movie1_b.configure(background="#d7eeff")
		                self.Movie1_b.configure(disabledforeground="#a3a3a3")
		                self.Movie1_b.configure(font="-family {Segoe UI} -size 12")
		                self.Movie1_b.configure(foreground="#000000")
		                self.Movie1_b.configure(highlightbackground="#d9d9d9")
		                self.Movie1_b.configure(highlightcolor="black")
		                self.Movie1_b.configure(pady="0")
		                self.Movie1_b.configure(text='''{0} \n\nRating: {1}/5'''.format(namem[i],rating[i]))
		                self.Movie1_b.configure(wraplength="150")
		                y+=0.14
#####################################################################################################################################
#####################################HOME BAR###################################################
		self.Home_f = tk.LabelFrame(top)
		self.Home_f.place(relx=0.023, rely=0.029, relheight=0.093, relwidth=0.50)
		self.Home_f.configure(relief='groove')
		self.Home_f.configure(foreground="#000000")
		self.Home_f.configure(background="#e8e8ff")
		self.Home_f.configure(highlightbackground="#d9d9d9")
		self.Home_f.configure(highlightcolor="black")

		self.home_inner_f = tk.Frame(self.Home_f)
		self.home_inner_f.place(relx=0.017, rely=0.109, relheight=0.797, relwidth=0.959, bordermode='ignore')
		self.home_inner_f.configure(relief='groove')
		self.home_inner_f.configure(borderwidth="2")
		self.home_inner_f.configure(relief="groove")
		self.home_inner_f.configure(background="#b3eaff")
		self.home_inner_f.configure(highlightbackground="#d9d9d9")
		self.home_inner_f.configure(highlightcolor="black")

		self.Home_b = tk.Button(self.home_inner_f,command=lambda:back(name,mem,email,top))
		self.Home_b.place(relx=0.025, rely=0.0, height=54, width=77)
		self.Home_b.configure(activebackground="#ececec")
		self.Home_b.configure(activeforeground="#000000")
		self.Home_b.configure(background="#000040")
		self.Home_b.configure(disabledforeground="#a3a3a3")
		self.Home_b.configure(font="-family {Segoe UI} -size 12")
		self.Home_b.configure(foreground="#ffffff")
		self.Home_b.configure(highlightbackground="#d9d9d9")
		self.Home_b.configure(highlightcolor="black")
		self.Home_b.configure(pady="0")
		self.Home_b.configure(text='''Home''')

		self.Member_l = tk.Label(self.home_inner_f)
		self.Member_l.place(relx=0.262, rely=0.137, height=34, width=352)
		self.Member_l.configure(activebackground="#b3eaff")
		self.Member_l.configure(activeforeground="black")
		self.Member_l.configure(background="#b3eaff")
		self.Member_l.configure(disabledforeground="#a3a3a3")
		self.Member_l.configure(font="-family {Segoe UI} -size 12")
		self.Member_l.configure(foreground="#000000")
		self.Member_l.configure(highlightbackground="#d9d9d9")
		self.Member_l.configure(highlightcolor="black")
		self.Member_l.configure(text=f'Member status {name} has {mem} Membership')


if __name__ == '__main__':
	vp_start_gui()


